[paths]
# Location of the raw datasets
IO_DATASETS = "/mnt/helios/osome/INCAS/infoops_new" # Location of pkl files
INCAS_DATASETS = "/mnt/helios/osome/INCAS/datasets" # Location of jsonl files

# Location where the preprocessed datasets will be stored
PREPROCESSED_DATASETS = "Data/Preprocessed"

#Logation of the outputs 
NETWORKS = "Outputs/Networks"
FIGURES = "Outputs/Figures"
TABLES = "Outputs/Tables"
CONFIGS = "Outputs/Configs"


# General settings for the null model
[nullmodel]
realizations = 0 # No nullmodel
scoreType = ["quantile"] # pvalue
batchSize = 10
idf = "smoothlog" # None, "none", "linear", "smoothlinear", "log", "smoothlog"
workers = -1 # Number of parallel workers. If -1, all the available cores will be used
minSimilarity = 0.2 # will only consider similarities above that value
# Specific settings for nullmodel of indicators
# will overwrite the general settings
# Example:
# [nullmodel.coretweet]
# minSimilarity = 0.4
#
# [nullmodel.cohashtag]
# idf = "smoothlinear"

# General settings for indicators
[indicator]
# total number of different items(left nodes) for that indicator
# e.g., minimum unique hashtags of the user
minUserDegree = 10
# total activity of the user for that indicator
# e.g., minimum uses of a user
minUserStrength = 1
# total number of different users(right nodes) for that indicator
# e.g., minimum unique users that used a hashtag
minItemDegree = 1
# total activity of the item for that indicator
# e.g., minimum uses of a hashtag
minItemStrength = 1
# min number of activities (among all indicators) of a user
minUserActivities = 10


# This threshold is applied before the merged networks.
[indicator.thresholds]
quantile = 0.0
# example to also include a threshold on similarity
# similarity = 0.5


# Specific settings for indicators
# will overwrite the general settings
# Example:
# [indicator.coretweet]
# minUserDegree = 20
# threshold = 0.05

[indicator.cohashtag]
minItemDegree = 1

[indicator.textsimilarity]
n_buckets = 5000
cache_path = "Data/Cache"



[merging] 
#method used for merging the networks.
#Only pvalue, quantile or max are available for now
method = "quantile"
weightAttribute = "quantile" # Attribute to be used as weight for the merging
shouldAggregate = true

[community]
detectCommunity = true
computeCommunityLabels = false
rankingStrategy = "mean"

[output]
thresholdAttribute = "quantile"
thresholds = [0.95,0.99,0.999,0.9999,0.99999]
rankingAttributes = ["weight", "similarity"]

# Specific extra thresholds for the output
# based on other features
[output.extraThresholds]
# quantile = 0.0
communitySize = 10



